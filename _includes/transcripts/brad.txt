Thank you, general, that was very kind of you, hi, everyone, I'm Brad Bouse as Jen said, I'm from Seattle. 

Seattle is the city in the northwestern corner of the United States, we have a lot of coffee, we have a lot of men with beards, we have a lot of tattoos, and we have a lot of rain, I feel really at home here in Berlin, it's great. 

 I work as a front end engineer, products manager, mostly for very early stage start ups, I like figuring out what should and should not be in a product. 

So, I have a little bit of advice for you. 

Now, I just want to clear something upright now, I know that there's been rumors, this is actually not about the Apple Watch. 

 I know the timing kind of worked out that that might be what it's about, it's actually something different. 

Marking something useless sounds, it's a funny thing to say, maybe that's why you're here, it's not how we think about things, we normally think about things and their utility, we've learned a lot of really useful things to day, I don't know if that's always the best idea. 

So, there's one question that as professional developers, engineers that you've been asked, be asked by your boss, your product manager, your client. 

And that question is how long will it take?  And, if you're like me, that's your answer. 

And if you're really like me, and then you just want to tell them to go away. 

You have to deal with this problem, the reason why this causes us a lot of anxiety is that we have to distill all the come collated things that could go on in this product, in this feature, in this bug all the things that could go wrong, we have to distill that down to a number, have to turn that to a date, we have to commit to it, every decision we make along the road we have to meet that number this is how we solve problems professionally. 

We put them into a mechanism that managers times, manager chunks of problems to land the project in finish state, sometimes down the road. 

And along the way we have to make a lot of compromises, we have to keep saying, oh, we can't do this, we can't do that, because we don't have a lot of time that's okay, that's how it works, with eve got to make money ‑‑ we have to make money, business has to go on, the one thing that this does is it stops us from exploring code, it stops us from playing with code. 

The reason I want you to do something useless, take a little bit of time and do something where there's no dead line where nobody cares if it's finished. 

This is the waterfall swing. 

They have been doing well with this, tail brought it around to different installations in different cities, and this just looks fun. 

If you ‑‑ if you, I would really rather be there right now, in fact. 

If you ride this and you're not giggling like a little schoolgirl, you're just not human, it looks like a lot of fun. 

So what this is called, broadly speaking, is creative coding. 

It's a little bit of problematic term because it has a gait in coding, yee creative coding is a qualifier, yee creative is a good thing, if you don't feel like you're creative, can you do yee creative coding?  That's a problem I'd like to talk about, that's what I'd like to work through today. 

So the first thing is Iv to say is don't be afraid I've been talking about yee creative code for a while, and a lot of people say that's really neat, but it's not for me, I'm not yee creative, I'm not good at that, my stuff doesn't look good. 

 I can't do that. 

That's okay. 

It's really natural. 

When mess of you think ant art, you probably think about something like this ‑‑ think art you probably think about this, this is a masterpiece, Rembrant, he looks like a million bucks, it probably is way more than a million bucks, he's worth multiple million bucks, if you're like me, you might have sat down and try to draw something, maybe you tried to draw this?  (Laughing) and I'll admit, like I, I didn't draw that, I Googled it, I took a terrible child's drawing because I was too embarrassed of my own bad drawing to put it on screen. 

This is kind of my favorite illustration of the problem. 

And it's what you see all over the place where experts will give you a tutorial where it starts to go, way, way, way too fast. 

And when you're an expert you never see all these geniuses you never see all the crap that they actually make. 

You never see their process when they're making art. 

You just draw the rest of it out. 

So Ira glass is an American talk show host, he has a great talk about this very problem. 

He said asacriative person the first thing you probably have is taste, you know kind of what's good, what's bad, and you have an opinion about the way things should be, when you sit down to make something for the very first time, you make it, you're disappointed you know your taste is work against you, you know this stuff is not as good as what you see out there, what you like, he call this is the gap. 

 I think that's ‑‑ everybody faces this, and the only way to cross this grab is with practice, you have to take a step back, recognize that I'm at this gap, and I can cross it, I can cross it by doing work. 

Put in practice, I can put in time, I can work on this process. 

This is Chuck Close, he is an American artist, this was in 1968, I believe. 

His quote that I really like, inspiration is for amateurs the rest of us just show up and get the work. 

Chuck Close is an artist that believers in process, he believe in doing work. 

This is actually a huge painting. 

It's an 8‑foot by 8‑foot painting, it's glorious to behold, if you get a chance to see it please do, each whisker is beautifully render, the bouquet around his face, it's a luminous painting. 

And he puts in the work. 

And he's actually made a career out of these extremely photo realistic large form pictures. 

And you can see his style evolves you can understand this is a man that's showing up to work, he's putting in the hours and he's making great work. 

 I don't what his first work started out like, but I imagine it evolved and he got better. 

Maybe he started out drawing the two little circles, I don't know. 

So what this ‑‑ when I see this, we like to think kind of culturally as artists as being struck by a lightening bolt, maybe they're lounging on a hill somewhere, they're struck by a lightening bolt of sudden inspirery inspiration and they paint the Mona Lisa, whatever, whatever is an amazing piece of work, but that's not the case, they're men, they're women, they're working, they're struggling and they're putting in the hours, showing up for work, working on a process, and when you're feeling bad about whatever you're markinge, think about process as your savety net, know that if you keep working at it. 

You'll get better. 

The reason why you want to keep working when you're trying to make something is great ideas are really hidden. 

There's a theory I really like strew art Kaufman it's about adjacent possible. 

It's about evolution, we think about evolution as a linear path where we went straight out of the muck to bee become Homo sapienses, that's not how it worked, it was a lurching process, one evolution beget another evolution, by the time we got to a third evolution it's a completely different space from where we started. 

Ideas work the same way, if you're exploring an idea, a project, you don't know what's going to happen right away, you have to work, put in the hours and maybe you'll see something new that will happen. 

We have this in our own live in start ups, it's called a five pivot. 

Sometimes it's a cover for something else, the classical use of pivot, they explore a space, they see something else is Bert that they didn't see before and they move into it. 

So if you combine these two things, idea of working a process of crossing the gap and exploring where you are at every stage youv a powerful mechanism to make something new and interesting. 

Now, it's important for me to say, that I'm not an artist, I'm not particularly blessed with creativity, what I am good at is streamlining processes, I'm good at understanding how things work, but as you see I'm married to an artist, this is Anne ‑‑ she is a poetty professor, I have been to far more than my share of poetry reading, performance arts museums and all strange things, I feel as an ambassador from strange lands to share what I've learned as an engineer. 

We work on projects together. 

This is one project that we did, it's called between page and screen. 

And it is an augmented reality book of poetry. 

 I know. 

When you open it up you'll see that you have markers, there's no words, just a series of markers. 

And the instructions to go to between page and screen.com. 

Question see me in many ways, when we hold up ‑‑ ‑‑ we hold the words in our hands, and what these are is a series of letters between page and screen about their kind of tack curious relation ship. 

(fracturus) that's been a successful project for us. 

She's been invited to fly around the world to present it, she does a much better job than I do. 

This was great, it was a lark, a thing that we did for fun. 

People like it, it's a real book, you can buy it. 

One of the great things that came out of it a small arts group approached us to do a commissioned project, which means that we were paid artists, that was really exciting for us. 

Now it was a tiny amount of money, it counts, right, as paid. 

So we started the process with this group, ‑‑ Whoa ‑‑ don't get excited. 

All right we started the process with this group, ignore that. 

And started to look a lot like work. 

And we got that question, how long will it take?  How long will it take us to finish this project, when can we deliver it. 

We've arranged the gallery space, figure it out, start marketing, started to feel a lot like work. 

And the thing is between page and screen never felt like work, this is the first demo that we did. 

 I showed her the library that did the marker technology, she thought that was cool, we talked maybe we codo a book, we did this with a little pig on a piece of paper, we showed it to a few people and they thought that was cool and before we knew it we had a book. 

Now we have this whole other project and we have a deadline and it's stressful. 

We decided to do a project where we had diaries from 1858, shopkeeper's diary told a very interesting story. 

She extracted ‑‑ transcribed some of the entries, we decided we would have a project with the leap motion of where you would go to a gallery, you would see the leap motion on a column, and then you would see a monitor above it that is not as large as this one. 

And then as you approached you would see your own distorted face and when you waved your hand over the leap motion you would see there's another text within it. 

This is called an erasure. 

And this is all done in JavaScript with particles so there are about a million particles that are moving around my hand. 

And we have thirty different entries that you can go and you can read. 

Of (applause) thank you, that's very kind of you, and actually it's really hard for me to show that project because I don't think it's as good as what it could be. 

It doesn't have the same pop that between page and screen has. 

People when she showed between page and screen there's an O O Oh in the audience, this one doesn't quite have that. 

The reason I feel the deadline really paralyzed me. 

There was a lot of new technology that we needed to learn. 

Every one of these blessed technology had some problem or another in doing this, and every time I was faced with solving this problem I had to make compromises because we had a deadline. 

That's okay, that's how stuff works, that's how business works, it made me think about this problem of time and what it does the creative process. 

I realized one thing people like to do is go up and they like to see themselves reflected. 

 I thought that was pretty cool, I realized with this big plate of software that I had I could do a new project. 

 I could reuse that rendering pipeline and do something I call glitch booth and what that takes very bad selfies. 

So, as you see it's kind of like a Skype call. 

(Laughing) and there are different things that you can do and then if you find one that you like ‑‑ you can ‑‑ can tweet it. 

So, that's glitch booth and this was that was about ten hours of code, maybe fifteen hours of code. 

 I spent more time ton logo, the site, registering the Twitter, doing all that stuff then I spent on writing the code. 

 I think this is a great example of the adjacent possible. 

There's no way I would of sat down and made glitch booth, it's a bit of a trivial project, but since I had the code lying around it was fun. 

 I brought it to cascade yeah JS and a lot of people came up and took pictures and tweeted it. 

It was a lot of fun. 

And you can see that now you can see ‑‑ there are about 90 of them, it's a Twitter account. 

So that's a little bit of my work, and now it's your turn, so I want you to make something useless. 

The first thing you'll find as a diligent conference goer, you're going to go home and say brad wanted me to make something useless, and I'm going to do that, and you'll find that blank pages are blockers, the hardest part about getting started is getting started you have a blank page. 

That's not a new problem, one thing that artist do is use rules to get started. 

They're called constraint, a really common constraint is a Haiku, it's a three line poem, first line has five syllable, seven syllables and five syllables in the United States we have school children do this, the form is so restrictive it becomes a game you have to fit what ever your mess ermessage is into this tight format. 

Instead of a blank verse assignment they give them a Haiku, the kids get it done and they learn a little bit about poetry. 

So we actually have, we're blessed with this enormous network of con train based writing, I guess you call it Twitter. 

This is a Haiku Bot that finds completely inane tweets and recognizes that they're in a Haiku formaillot and tweets them as such. 

They're actually kind of entertaining. 

 I everyone in has their favorite dots, this one's mine, art assignment Bot, pulling a list of three different tasks, the task, the theme and then a deadline, and they're great. 

 I love the constructed D print critiquing fear due in two seconds. 

So,Bots are a great place to start, because they use the tools you already know how to use. 

They're all based with text, if you know a little Regx X if you pull from a list, use an API, osseter, you're Godden. 

Then there's a built in audience once you tweet it and there's a built‑if data set that is always changing there, are fun things you didk do with that. 

If if text isn't your thing this is Sol Lewitt. 

Considered the father of conceptual art, he is most famous for wall drawings. 

The wall drawings are just instructions, instructions for how to generate the drawing. 

And what you have here is the text, the instructions for the image that you see be hind it. 

Basically says place 50 random dots on the wall and then connect them all. 

So if you want to have your own Sol Lewitt you hire drafts people, official certified Sol Lewitt people to come out. 

They will put it on your wall and you'll get a certificate, and you now own a Sol Lewitt, this is a conceptual piece, you never meet Sol Lewitt certificate. 

He's dead, you can still get a new Sol Witt just for you. 

This is part of the concept. 

When I saw these instructions I thought it looked like a ticket from a PM. 

And so I made a repository, no idea if this is legal or not, it hasn't been shut down yet. 

 I have several dozen of the instructions, you can go there, there are templates using paper J S using processing, if there's a graphic language you particularly like, we can make a template for you, and people are making their own rendering of Sol Lewitt, this is one you can go to it right now, and there's renders in your browser, there's another one, another one, another one. 

And the great thing about them is that there can be multiple versions of the same solution. 

Because they have a little bit. 

They have alliful ambiguity. 

He did that intentionally the different aboutist, different drafts people would interpret it differently. 

 I encourage you to fork that Repo, give it a star, because that helps and then it takes about an hour, two hours depending on your comfort withdrawing with code, and solves them. 

And then finally this is somethinge something that you can do without any code at all, I know that's kind of an outrayous proposal at JSConf 2014, but that's the deal. 

So this is a Swiss artist ‑‑ a group of artist they were inspired by Sol Lewitt. 

They have art game, all you need are four players, four sharpies, and many beers, and each player takes a turn and what you see there is that they're doing the first exercise in the book, a cross hatching exercise and by the time they're finished with it, you get kind of a neat piece of hatched art. 

This is a great thing to do with anyone, you can do it with your partner, you can do it with your kids, you can even do it with your entyre company, everybody will have a different perspective on how this art is generated. 

 I did this with 60 engineers at a company in LA, it was neat they had it up on their wall for months after ward. 

That's a conditional design work book. 

 I love it. 

They have about a dozen exercises in this book, you can download it at conditional design.org your can buy it. 

If you ever see them, buy them a beer and send me the bill. 

This is great work and they deserve to be reworded. 

So those are somes to get started. 

No, ma'am the limit of things to get started. 

We have projection mapping, the demo scene that Matthew talked about earlier of there's Ardwino, connect. 

These are three little snacks for you to start with, start with anything. 

And the reason why we solve problems, the technology is going to change but the problem solving skills are not, if you take time to abstract your problem solving skills, using something like this, get to understand the process of how you solve problems, I think that's a skill you're going to be able to use for a wrong time in your career, long after like Angular, JavaScript becomes something if new in five years. 

JavaScript okay is not going anywhere, that's not Blasmmy ‑‑ go home, this is my Twitter handle, my web site, my e‑mail, I want to help, show me what you make, and let's get started. 

Thank you very much ( applause)